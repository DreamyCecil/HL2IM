/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#ifndef _Engine_Classes_BaseEvents_INCLUDED
#define _Engine_Classes_BaseEvents_INCLUDED 1
#define EVENTCODE_EInternal 0x00050000
class DECL_DLL EInternal : public CEntityEvent {
public:
EInternal();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EInternal &e) { e = EInternal(); } ;
#define EVENTCODE_EVoid 0x00050001
class DECL_DLL EVoid : public CEntityEvent {
public:
EVoid();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EVoid &e) { e = EVoid(); } ;
#define EVENTCODE_EReturn 0x00050002
class DECL_DLL EReturn : public CEntityEvent {
public:
EReturn();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EReturn &e) { e = EReturn(); } ;
#define EVENTCODE_EBegin 0x00050003
class DECL_DLL EBegin : public CEntityEvent {
public:
EBegin();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EBegin &e) { e = EBegin(); } ;
#define EVENTCODE_ETimer 0x00050004
class DECL_DLL ETimer : public CEntityEvent {
public:
ETimer();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(ETimer &e) { e = ETimer(); } ;
#define EVENTCODE_ETouch 0x00050005
class DECL_DLL ETouch : public CEntityEvent {
public:
ETouch();
CEntityEvent *MakeCopy(void);
CEntityPointer penOther;
BOOL bThisMoved;
FLOATplane3D plCollision;
};
DECL_DLL inline void ClearToDefault(ETouch &e) { e = ETouch(); } ;
#define EVENTCODE_EPass 0x00050006
class DECL_DLL EPass : public CEntityEvent {
public:
EPass();
CEntityEvent *MakeCopy(void);
CEntityPointer penOther;
BOOL bThisMoved;
};
DECL_DLL inline void ClearToDefault(EPass &e) { e = EPass(); } ;
#define EVENTCODE_EBlock 0x00050007
class DECL_DLL EBlock : public CEntityEvent {
public:
EBlock();
CEntityEvent *MakeCopy(void);
CEntityPointer penOther;
FLOATplane3D plCollision;
};
DECL_DLL inline void ClearToDefault(EBlock &e) { e = EBlock(); } ;
#define EVENTCODE_EWouldFall 0x00050008
class DECL_DLL EWouldFall : public CEntityEvent {
public:
EWouldFall();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EWouldFall &e) { e = EWouldFall(); } ;
#define EVENTCODE_ETeleport 0x00050009
class DECL_DLL ETeleport : public CEntityEvent {
public:
ETeleport();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(ETeleport &e) { e = ETeleport(); } ;
#define EVENTCODE_EPreLevelChange 0x0005000a
class DECL_DLL EPreLevelChange : public CEntityEvent {
public:
EPreLevelChange();
CEntityEvent *MakeCopy(void);
INDEX iUserData;
};
DECL_DLL inline void ClearToDefault(EPreLevelChange &e) { e = EPreLevelChange(); } ;
#define EVENTCODE_EPostLevelChange 0x0005000b
class DECL_DLL EPostLevelChange : public CEntityEvent {
public:
EPostLevelChange();
CEntityEvent *MakeCopy(void);
INDEX iUserData;
};
DECL_DLL inline void ClearToDefault(EPostLevelChange &e) { e = EPostLevelChange(); } ;
#define EVENTCODE_EFirstWorldBase 0x0005000c
class DECL_DLL EFirstWorldBase : public CEntityEvent {
public:
EFirstWorldBase();
CEntityEvent *MakeCopy(void);
};
DECL_DLL inline void ClearToDefault(EFirstWorldBase &e) { e = EFirstWorldBase(); } ;
extern DECL_DLL CEntityPropertyEnumType DamageType_enum;
enum DamageType {
  DMT_EXPLOSION = 1,
  DMT_PROJECTILE = 2,
  DMT_CLOSERANGE = 3,
  DMT_BULLET = 4,
  DMT_DROWNING = 5,
  DMT_IMPACT = 6,
  DMT_BRUSH = 7,
  DMT_BURNING = 8,
  DMT_ACID = 9,
  DMT_TELEPORT = 10,
  DMT_FREEZING = 11,
  DMT_CANNONBALL = 12,
  DMT_CANNONBALL_EXPLOSION = 13,
  DMT_SPIKESTAB = 14,
  DMT_ABYSS = 15,
  DMT_HEAT = 16,
  DMT_DAMAGER = 17,
  DMT_CHAINSAW = 18,
  DMT_NONE = 9999,
};
DECL_DLL inline void ClearToDefault(DamageType &e) { e = (DamageType)0; } ;
#define EVENTCODE_EDamage 0x0005000d
class DECL_DLL EDamage : public CEntityEvent {
public:
EDamage();
CEntityEvent *MakeCopy(void);
CEntityPointer penInflictor;
FLOAT3D vDirection;
FLOAT3D vHitPoint;
FLOAT fAmount;
enum DamageType dmtType;
};
DECL_DLL inline void ClearToDefault(EDamage &e) { e = EDamage(); } ;
#define EVENTCODE_EDeath 0x0005000e
class DECL_DLL EDeath : public CEntityEvent {
public:
EDeath();
CEntityEvent *MakeCopy(void);
EDamage eLastDamage;
};
DECL_DLL inline void ClearToDefault(EDeath &e) { e = EDeath(); } ;
#define EVENTCODE_ETakingBreath 0x0005000f
class DECL_DLL ETakingBreath : public CEntityEvent {
public:
ETakingBreath();
CEntityEvent *MakeCopy(void);
FLOAT fBreathDelay;
};
DECL_DLL inline void ClearToDefault(ETakingBreath &e) { e = ETakingBreath(); } ;
#endif // _Engine_Classes_BaseEvents_INCLUDED
